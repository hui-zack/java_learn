事务目录:
    事务介绍:
    事务的四大特征:
    基本事务:
    事务的自动提交和手动提交:
    事务的隔离级别概念:
    数据库隔离级别:

事务总结:
    基本事务:
        START TRANSACTION;                                                                  -- 开启事务:

        UPDATE account SET balance = balance - 500 WHERE NAME = "zhangsan";                 -- 事务内容
        UPDATE account SET balance = balance + 500 WHERE NAME = "lisi";

        COMMIT;                                                                             -- 无异常就提交
        ROLLBACK;                                                                           -- 出现异常, 进行回滚

    事务的自动提交和手动提交:
        SET @@autocommit = 1;                                                               -- 设置自动提交
        SELECT @@autocommit;                                                                -- 查询是否自动提交
        UPDATE account SET balance = 1000;

    数据库隔离级别:
        select @@tx_isolation;                                                              -- 查询当前数据库的隔离级别
        set global transaction isolation level "";                                          -- 设置当前数据库的隔离级别


事务介绍:
    概念:
        如果轶哥包含多个步骤的业务操作, 被事务管理, 那么这些操作要么同时成功, 要么同时失败:
    事务实例-转账:
        张三给李四转账500:
            开启事务
                (1) 查询张三账户是否大于500
                (2)张三账户 金额 -500
                (3)李四账户 金额 +500
            出现异常, 回滚
            提交事务
    事务操作:
        开启事务:  start transaction;
        提交:     commit;
        回滚:     rollback;

    事务的四大特征:

事务的四大特征:
    原子性:
        是不可分割的最小操作单位, 要么同时成功, 要么同时失败
    持久性:
        事务一旦提交或者回滚, 数据将会永久化保存数据
    隔离性:
        多个事务之间相互独立的程序
    一致性:
        事务操作前后数据总量不变

基本事务:
    使用流程:
        START TRANSACTION;                                                                  -- 开启事务:

        UPDATE account SET balance = balance - 500 WHERE NAME = "zhangsan";                 -- 事务内容
        UPDATE account SET balance = balance + 500 WHERE NAME = "lisi";

        COMMIT;                                                                             -- 无异常就提交
        ROLLBACK;                                                                           -- 出现异常, 进行回滚
    说明:
        流程不能变, 如下:
            开启事务:
            事务内容
            无异常提交
            异常回滚

事务的自动提交和手动提交:
    使用流程:
        SET @@autocommit = 1;
        SELECT @@autocommit;
        UPDATE account SET balance = 1000;

    基本说明:
        DML(数据增删改语句)本质上是一次事务
            mysql中的DML默认自动提交
            oracle中的DML默认手动提交
    修改事务的的提交方式:
        查看当前事务的提交方式:
            select @@autocommit   -- 1 代表自动提交, 0代表手动提交
        修改默认提交方式:
            set @@autocommit = 0

事务的隔离级别概念:
    概念:
        我们期待多个事务之间隔离的, 相互独立的, 但是如果多个事务操作同一批数据, 就会引发一些问题, 设置不同的隔离级别则可以解决这些问题
    存在问题:
        脏读:
            一个事务, 读取到另一个事务中没有提交的数据
        虚读(不可重复读):
            在同一个事务中, 两次读取到的数据不一样
        幻读:
            一个事务操作(DML), 操作数据表中所有的记录, 另一事务添加了一条数据, 则第一个事务查询不到自己的修改
        mysql中不存在该情况

数据库隔离级别:
    使用流程:
        select @@tx_isolation;                                  -- 查询当前数据库的隔离级别
        set global transaction isolation level "";              -- 设置当前数据库的隔离级别
    基本说明:
        设置隔离级别后, 需要重新连接数据库才能查到修改后的级别值
    隔离级别:
        级别一 : read uncommitted; 读未提交
            可能发生的问题: 脏读, 不可重复读, 幻读
        级别二 : read committed;
            可能发生的问题: 不可重复读, 幻读
        级别三 : repeatable read;
            可能发生的问题:
                幻读
        级别四 : serializable;
            可以解决所有问题

        *注意: 隔离级别从小到大安全性越来越高,但是效率越来越低

    查询数据库隔离级别:
        select @@tx_isolation;
    设置数据库隔离级别:
        set global transaction isolation level 隔离级别;

隔离级别问题演示:
	使用流程
        set global transaction isolation level read uncommitted;
        start transaction;
        -- 转账操作
        update account set balance = balance - 500 where id = 1;
        update account set balance = balance + 500 where id = 2;