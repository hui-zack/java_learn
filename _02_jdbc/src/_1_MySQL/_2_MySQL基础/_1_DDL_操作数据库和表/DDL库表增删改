DDL知识点目录:
    --> [DDL]
        DDL知识点架构:
        DDL概念:
    --> [DDL操作数据库]
        查询数据库:
        创建数据库:
        修改数据库:
        修改数据库:
    --> [DDL操作表]
        数据库中的数据类型:
        创建表:
        查询表:
        删除表:
        修改表:

DDL知识点架构:
    --> [DDL操作数据库]
        查询数据库:
            show databases;                                         # 查看 所有数据库
            show create database test;                              # 查看test数据库字符集
            select database();                                      # 查询当前使用的数据库
        创建数据库:
            create database if not exists db1;                      # 不存在db1 创建db1数据库
            create database db2 character gbk;                      # 创建db2   指定器字符集为GBK
            create database if not exists db4 character set gbk     # 创建前判断存在, 并指定字符集为GBK
        修改数据库:
            alter database db2 character set utf8;                  # 修改db2数据的字符集为utf8
        删除数据库:
            drop database db4                                       # 直接删除db4数据库
            drop database if exists db4                             # 删除db4数据库前, 先判断存在
        使用数据库:
            use db1;                                                # 使用数据库

    --> [DDL操作表]
        创建表:
            create table Student(                                   # 创建表; id name 等都是列的名名
                id int,
                name varchar(32),
                age int,
                score double(4 ,1),
                birthday date,
                insert_time timestamp
            )

            create table stu like student;                          # 复制表属性创建新表, 不包含数据
        查询表:
            show tables;                                            # 查询当前数据库下的所有表名称
            desc user;                                              # 查询user表的结构, 包含列名
        删除表:
            drop table stu;                                         # 直接删除表stu
            drop table if exists stu;                               # 删除表stu前判断
        修改表:
            alter table stu rename to student1;                     # 修改表stu 的名称为student1;
            alter table student1 character set gbk;                 # 修改表student1 字符集为GBK

            alter table student1 add address varchar(10);           # 修改表student1 address列到最后
            alter table student1 change address sex varchar(10);    # 修改表student1 修改address列为 sex varchar(10)
            alter table student1 modify address sex;                # 修改表student1 修改address列的名称为sex
            alter table student1 drop sex;                          # 修改表student1 删除列名称为sex的列
DDL概念:
    说明:
        数据定义语言
        操作数据库和表

    DDL操作(CURD):
        C --> Create    创建
        R --> Retrieve  查询
        U --> update    修改
        D --> Delete    删除


--> [DDL操作数据库]

查询数据库:
    使用流程:
        (cmd_mysql)
        show databases;                    # 查看 所有数据库
        show create database test;         # 查看test数据库字符集

    基本说明:
        两个常用的 数据库查询操作

    命令详解:
        show databases;
            查看 MySQL下所有数据库, 默认4个
            默认的数据库都不建议使用, 使用自己创建的

            命令结果:
                information_schema:
                    描述MySQL的信息, 存放视图, 无实体文件夹
                mysql:
                    MySQL服务器的核心数据库, 存放MySQL核心数据, 有很多表文件
                performance_schema:
                    这个数据库用于对性能做提升
                test:
                    空数据库

        show create database 数据库名称:
            查看 当前MySQL的字符集

创建数据库:
    使用流程:
        (cmd_mysql)
        create database if not exists db1;                      # 不存在db1 创建db1数据库

        create database db2 character gbk;                      # 创建db2   指定器字符集为GBK

        create database if not exists db4 character set gbk     # 创建前判断存在, 并指定字符集为GBK

    基本说明:
        创建数据库的三种方式, 最后一种最健壮

    命令详解:
        create database 数据库名称;
            直接创建, 若已经存在会报错

        create database if not exists 数据库名称;
            创建前判断该数据库是否存在, 不存在才创建
            健壮不报错

        create database 数据库名称 character set 字符集;
            创建数据库并指定字符集
            若相同名称的数据库存在会报错

        create database if not exists 数据库名称 character set 字符集;
            创建前判断存在, 并指定字符集

修改数据库:
    使用流程:
        (mysql in cmd)
        alter database db2 character set utf8;         # 修改db2数据的字符集为utf8

    基本说明:
        DDL修改数据库一条语句

    命令详情:
        alter database 数据库名称 character set 字符集;
            修改指定数据库的字符集

删除数据库:
    使用流程:
        (mysql in cmd)
        drop database db4               # 直接删除db4数据库
        drop database if exists db4     # 删除db4数据库前, 先判断存在
    基本说明:
        DDL删除数据库两条命令

    命令详解:
        drop database 数据量名称
            直接删除数据库
            数据库不存在时报错
        drop database if exists 数据库名称
            删除db4数据库前, 先判断存在

使用数据量:
    使用流程:
        select database();              # 查询当前使用的数据库
        use db1;                        # 使用数据库
    基本说明:
        DDL使用数据库 两条命令
    命令详解:
        select database();
            查询当前使用的数据库
        use 数据库名称;
            使用指定的数据库

--> [DDL操作表]
数据库中的数据类型:
    使用流程:
        create table tab(
            name varchar(20),                   # 字符串类型; 最大长度20个字符
            age int,                            # 整数类型
            height double(5, 2),                # 小数类型; 一共5位数, 其中2位是小数
            birthday date,                      # date类型; yyyy-MM-dd
            examTime datetime,                  # datetime类型; yyyy-MM-dd HH:mm:ss
            addTime timestamp                   # timestamp类型; 时间戳类型, 默认为当前系统时间;
        )

    常见数据类型:
        varchar(20)
            字符串类型; 最大长度20个字符
        int
            整数类型
        double(5, 2)
            小数类型; 一共5位数, 其中2位是小数
        date
            date类型 (日期类型)
            yyyy-MM-dd
        datetime
            datetime类型 (日期时间类型)
            yyyy-MM-dd HH:mm:ss
        timestamp
            时间戳类型
            默认为当前系统时间
            赋值为null时自动使用当前系统时间
创建表:
    使用流程:
        (mysql in cmd)
        create table Student(                           # 创建表; id name 等都是列的名名
            id int,
            name varchar(32),
            age int,
            score double(4 ,1),
            birthday date,
            insert_time timestamp
        )

         create table stu like student;                 # 复制表属性创建新表, 不包含数据

    基本说明:
        DDL创建表 两个命令
        创建表, 表名后的()里都是列的名称
        复制表
    命令详解:
        创建表:
            create table 表名称(
                第1列名称 int,
                第2列名称 varchar(32),
                第3列名称 int,
                第4列名称 double(4 ,1),
                第5列名称 date,
                第6列名称 timestamp,
                ...,
                第n列名称 数据类型
            )
        复制表:
            create table stu like student;
                复制表属性创建新表, 不包含数据
查询表:
    使用流程:
        (mysql in cmd)
        show tables;                # 查询当前数据库下的所有表名称
        desc user;                  # 查询user表的结构, 包含列名
    基本说明:
        DDL查询表 两个命令
    命令详解:
        show tables;
            查询当前数据库下的所有表名称
        desc 表名;
            查询指定表的表结构
            被查询的表必须位于当前所在的数据库中

删除表:
    使用流程:
        (mysql in cmd)
        drop table stu;                     # 直接删除表stu
        drop table if exists stu;           # 删除表stu前判断

    基本说明:
        DDL删除表 两个命令

    命令详解:
        drop table 表名称;
            删除指定的表
            若表不存在会报错
        drop table if exists 表名称;
            删除表前先判断

修改表:
    使用流程:
        (mysql in cmd)
        alter table stu rename to student1;                 # 修改表stu 的名称为student1;
        alter table student1 character set gbk;             # 修改表student1 字符集为GBK

        alter table student1 add gender varchar(10);        # 修改表student1 添加gender列到最后

        alter table student1 change gender sex varchar(10); # 修改表student1 修改gender列为 sex varchar(10)
        alter table student1 modify gender sex;             # 修改表student1 修改gender列的名称为sex

        alter table student1 drop sex;                      # 修改表student1 删除列名称为sex的列

    基本说明:
        DDL操作表 6条命令
        表修改2个 列操作4个

    命令详解:
        表修改:
            alter table 表名称 rename to 新的表名称;
                修改指定表的名称;
            alter table 表名称 character set 字符集;
                修改指定表的字符集
        列操作:
            alter table 表名称 add 列的名称 数据类型;
                修改指定表 添加指定名称和类型的列 到最后

            alter table 表名称 change 列名称 新的列名称 数据类型;
                修改指定表 修改指定列的名称和数据类型

            alter table 表名称 modify 列名称 新的列名称;
                修改指定表 修改指定列的名称
                可以修改表名,
                也可以修改列数据类型
                还可以列名数据类型一起修改

            alter table 表名称 drop 列名称;
                修改指定表 删除指定列