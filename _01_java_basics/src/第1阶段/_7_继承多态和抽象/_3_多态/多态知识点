多态:     //动物的猫状态, 除了重写的方法只能用自己的
    多态概述:
        同一歌对象, 在不同时刻表现出不同的形态

    使用方法:
        定义方法时候, 使用父类对象作为参数,
        使用时, 使用子类对象传入

    多态的前提(必须同时具备):
        (1)有继承/实现关系
        (2)有方法重写
        (3)有父类引用指向子类对象
            实例: Animal a = new Cat();

    多态中成员的访问特点:
        访问 成员变量/方法:
            成员变量: 编译看左边(父), 执行看左边(左)
            重写方法: 编译看左边(父), 执行看右边(左)
                原因: 因为成员方法有重写, 成员变量没有

    多态的好处和弊端:
        好处:
            提高代码的扩展性:
                定义方法时候, 使用父类对象作为参数,
                使用时, 使用子类对象传入
        弊端:不能使用子类的特有功能
多态的转型:
    使用方法:
        向上转型:
            Animal a = new cat();

        向下转型:
            cat c = cat(a)
    用处:
        c可以使用子类和父类的所有方法
