方法:
    方法概述:
        具有特定功能的代码集
        定义和调用:
            定义:
                先创建再使用成为定义
            调用:
                手动使用执行, 称为调用
        方法不能嵌套使用, void表示无返回值.
    方法通用格式:
        public static 返回值类型 方法名(参数) {
            语句体;
        }
    方法调用:
        方法名();
            如: isEvenNumber()
    方法调用过程:
        就是个函数
    带参数方法定义:    //方法参数的数据类型互相可以不同
        格式:
            单个参数:
                    public static void(int number) {
                        System.out.println(number)
                    }
            多个参数:
                public static void(int number1, int number2, ...) {
                    语句体;
                }

                    //方法调用时, 参数的数量和类型必须和定义的一致, 否则报错
        形参和实参:
            形参:
                定义时的参数
            实参:
                调用时的参数
    带返回值方法:   //返回值和static后的数据类型必须一致!!
        格式:
            有返回值:
                public static boolean Result(int number1, int number2){
                    boolean result = number1>number2 ?
                    return result;
                }
            无返回值:
                public static void print(char string) {
                    System.out.println(string);
                }
    方法重载:
        概述:
            满足三个条件构成重载:  //只看参数 与返回值无关
                多个方法在一个类中
                具有相同的方法名
                但参数的类型或数量不同
            重载指定是对同一类中的同名方法的识别
    方法的参数传递:
        基本数据类型的传递:
            方法中形参的值修改, 不影响main中参数的值
        引用数据类型的传递
            传递的是地址, 会修改main中参数的值
