数据类型:  //整数默认int 浮点默认double
    基本数据类型:
        byte short int long
        flont double
        char
        boolean
    引用数据类型:
        class 类
        interface 接口
        数组[]
变量:
    定义:
        byte b = 10;
        int i = 100;
        float = 3.14            //默认double 最后加F区别
        char = 'a'
        boolean b = true
        long l = 10000000000L   //默认int 最后加L区别
        short s = 3883724
    变量使用注意事项:
        声明时名字不能重复
        变量未赋值,不能使用
        long类型定义时,最后加L
        float类型定义时候,最后加F
标识符
    定义:
        数字,字母,下划线或$组成
        不能数字开头
        不能是关键字
        区分大小写
    命名约定:
        第1阶段._5_类和对象.方法/变量:
            标识符是一个单词-->首字母小写
            标识符多个单词-->首字母小写,其他大写
        类:
            标识符是一个单词-->首字母大写
            标识符多个单词-->首字母大写
类型转化:
    自动类型转换: 只能小转大
        格式:
            short s = 100;
            int i = s;
        转换流程图:
            byte -> short -> int -> long -> float ->double
                    char
    强制类型转换:
        格式:
            short s = 100;
            int i = (int)s;
            ----------
            int i = (int)88.88;
运算符:
    算数运算符:
        + - * / %   //整数相除只能得到整数,
    字符+操作:
        类型提升现象
            不同类型的数值做+操作, 会自动提升为最高类型
    字符串+操作/拼接:
        就是个拼接
        字符串和任何类型都可拼接
    赋值运算符:  //赋值时注意类型转换的问题
        =
        +=  左加右后赋值左
        -=
        *=
        /=
        %=
    自增自减运算符:
        ++     相当于 i = i + 1
            int i = 10;
            inj j = i++;   计算顺序: j=i i++
            ----
            int j = ++i;   计算顺序: i++ j=i
        --
    关系运算符:  //运算结果为布尔值
        ==
        !=
        >
        >=
        <
        <=
    逻辑运算符
        普通逻辑运算符
            & 与
            | 或
            ^ 非
        短路逻辑运算符
            &&  第一步得出结论之后不执行
            ||
    三元运算符
        格式:
            关系表达式 ? 表达式1 : 表达式2;
            a>b ? a:b;  //为真:a是结果 为假:b是结果
                获取: int max= a>b ? true:false; //a>b为真,max==true, a>b为假, max==false





