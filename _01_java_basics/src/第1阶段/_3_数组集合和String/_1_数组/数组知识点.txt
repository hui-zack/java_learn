数组:
    数组定义:
        数组概念:
            只能用于存储相同类型的数据
        定义语法:
            格式一: //常用
                int[] arr    // 定义了一个int的数组, 数组名位arr
            格式二:
                int arr[]    // 定义了一个int的变量, 变量名是arr数组

    动态数组:   //指定长度
        动态初始化:
            为数组元素分配内存空间, 计算机自动赋值0!
            //java中的数组必须先初始化,然后才能使用
        格式:
            数据类型[] 数组名 = new 数据类型[长度];
                如: int[] arr = new int[3]

    静态数组:  //指定元素
        静态初始化:
            初始化时指定元素的值, 系统计算长度
        格式:
            简化格式:
                数据类型[] 变量名 = {数值1, 数值2, ...}
                    如: int[] arr = {1, 2, 3}
            格式:
                数据类型[] 变量名 = new 数据类型[]{数值1, 数值2, ...}
                    如: int[] arr = new int[]{1, 2, 3}
    内存:
        左边是栈, 右边是堆
        左边存地址, 右边存数据
    数组元素访问:
        格式:
            数组名[索引]  如: arr[0]
    数组常见问题:
        索引越界:
        空指针异常:
        null: 变量名不指向数组
    数组的遍历:
        遍历数组:
        for(int i=0; i<arr.length; i++) {   // arr.length 获取数组的长度
            System.out.println(arr[i])
        }
    获取最值:

        最大值:
        int[] arr = {123, 3432, 4234, 523, 542, 23423, 4234};
        int max = arr[0];
        for(int i=1; i<arr.length; i++) {     //max就是arr[0] 所以从i=开始
            if(max < arr[i]) {
                max = arr[i];
            }
        }